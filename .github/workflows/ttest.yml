name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        api-level: [30]
        target: ["google_apis"]
        arch: ["arm64-v8a"]

    steps:
      # 1. Скачивание кода
      - name: Check out code
        uses: actions/checkout@v3

      # 2. Установка JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      # 3. Установка Android SDK и инструментов
      - name: Install Android SDK
        run: |
          echo "Cleaning up any existing SDK..."
          rm -rf $HOME/Library/Android/sdk ~/.android
          mkdir -p $HOME/Library/Android/sdk/cmdline-tools/latest
          
          echo "Downloading and setting up cmdline-tools..."
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-10406996_latest.zip
          unzip -q commandlinetools.zip -d $HOME/Library/Android/sdk/cmdline-tools
          mv $HOME/Library/Android/sdk/cmdline-tools/cmdline-tools $HOME/Library/Android/sdk/cmdline-tools/latest

          echo "Setting up environment variables..."
          export ANDROID_HOME=$HOME/Library/Android/sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          echo "Updating and accepting licenses..."
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses --no_https
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update --no_https

          echo "Installing required packages..."
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "build-tools;35.0.0" \
            "platform-tools" \
            "platforms;android-30" \
            "system-images;android-30;google_apis;arm64-v8a" \
            "emulator"

      # 4. Запуск эмулятора
      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: pixel_3a
          emulator-options: "-no-snapshot -no-boot-anim -wipe-data"
          force-avd-creation: true
          emulator-boot-timeout: 600
          disable-animations: true
          script: |
            adb wait-for-device
            sleep 30
            adb shell input keyevent 82  # разблокировка экрана

      # 5. Ожидание готовности эмулятора
      - name: Wait for Emulator to Start
        run: |
          adb wait-for-device
          sleep 30
          adb shell input keyevent 82  # Разблокировка экрана

      # 6. Запуск тестов
      - name: Run Instrumented Tests
        run: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.example.itog1.ExampleInstrumentedTest

      # 7. Загрузка результатов тестов
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-test-results
          path: app/build/reports/androidTests/connected/
